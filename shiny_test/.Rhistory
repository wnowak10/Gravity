a=hist(x,col='red')
a=hist(x,col='green')
abline(v=.8)
donation_samples=rnorm(100,.4,.2)
a=hist(donation_samples,col='green')
abline(v=.8)
donation_samples=rnorm(100,.4,.15)
a=hist(donation_samples,col='green')
abline(v=.8)
donation_samples=rnorm(100,.4,.2)
a=hist(donation_samples,col='green')
abline(v=.8)
a=hist(donation_samples,col='green',xlim=c(0,1))
abline(v=.8)
shiny::runApp('opportunity/shiny_test')
shiny::runApp('opportunity/shiny_test')
shiny::runApp('opportunity/shiny_test')
source("data/helpers.R")
switch("1'",
sd
)
switch("1",
"1" = list(counties$white, "darkgreen", "% White"),
"2" = list(counties$black, "black", "% Black"),
"3" = list(counties$hispanic, "darkorange", "% Hispanic"),
"4" = list(counties$asian, "darkviolet", "% Asian"))
counties <- readRDS("/Users/wnowak/opportunity/shiny_test/data/counties.rds")
switch("1",
"1" = list(counties$white, "darkgreen", "% White"),
"2" = list(counties$black, "black", "% Black"),
"3" = list(counties$hispanic, "darkorange", "% Hispanic"),
"4" = list(counties$asian, "darkviolet", "% Asian"))
switch("1","1"="a","2"="b")
switch("2","1"="a","2"="b")
l=list("1"="a","2"="b")
l
switch("2",l)
l=list("1"="a","2"="b","3"="c")
l
switch("2",l)
l=c("1"="a","2"="b","3"="c")
l
switch("2",l)
?switch
shiny::runApp('opportunity/shiny_test')
runApp('opportunity/shiny_test')
runApp('opportunity/shiny_test')
runApp('opportunity/shiny_test')
runApp('opportunity/shiny_test')
runApp('opportunity/shiny_test')
runApp('opportunity/shiny_test')
runApp('opportunity/shiny_test')
runApp('opportunity/shiny_test')
runApp('opportunity/shiny_test')
runApp('opportunity/shiny_test')
runApp('opportunity/shiny_test')
runApp('opportunity/shiny_test')
shiny::runApp('opportunity/shiny_test')
runApp('opportunity/shiny_test')
us.election.2016.results.by.county <- read.csv("~/Desktop/us-election-2016-results-by-county.csv")
View(us.election.2016.results.by.county)
aqw <- dcast(us.election.2016.results.by.county, Trump + Clinton + Johnson + Stein + Castle ~ Candidate)
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
aqw <- dcast(us.election.2016.results.by.county, Trump + Clinton + Johnson + Stein + Castle ~ Candidate)
election <- read.csv("~/Desktop/us-election-2016-results-by-county.csv")
View(us.election.2016.results.by.county)
aqw <- dcast(election, election$Trump + election$Clinton ~ Candidate)
aqw <- dcast(election, election$CountyFips ~ election$Candidate)
head(aqw)
View(aqw)
election <- read.csv("~/Desktop/us-election-2016-results-by-county.csv")
# clean election data!
el_results <- dcast(election, election$CountyFips ~ election$Candidate)
head(el_results)
el_results <- dcast(election, election$CountyFips +election$StateName ~ election$Candidate)
election <- read.csv("~/Desktop/us-election-2016-results-by-county.csv")
# clean election data!
el_results <- dcast(election, election$CountyFips +election$StateName ~ election$Candidate)
head(el_results)
election <- read.csv("~/Desktop/us-election-2016-results-by-county.csv")
# clean election data!
el_results <- dcast(election, election$countyName + election$CountyFips +election$StateName ~ election$Candidate)
head(el_results)
election <- read.csv("~/Desktop/us-election-2016-results-by-county.csv")
# clean election data!
el_results <- dcast(election, election$CountyName + election$CountyFips +election$StateName ~ election$Candidate)
head(el_results)
dat$el_results <- do.call(paste, c(el_results[c("CountyName", "StateName")], sep = ","))
el_results$state_county <- do.call(paste, c(el_results[c("CountyName", "StateName")], sep = ","))
head(el_results)
el_results$state_county <- do.call(paste, c(el_results[c("election$CountyName", "election$StateName")], sep = ","))
head(el_results)
election <- read.csv("~/Desktop/us-election-2016-results-by-county.csv")
# clean election data!
el_results <- dcast(election, election$CountyName + election$CountyFips +election$StateName ~ election$Candidate)
el_results$state_county <- do.call(paste, c(el_results[c( "election$StateName","election$CountyName")], sep = ","))
head(el_results)
install.packages("UScensus2010")
library("UScensus2010", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
election <- read.csv("~/Desktop/us-election-2016-results-by-county.csv")
# clean election data!
aqw <- dcast(election, election$CountyFips ~ election$Candidate)
head(aqw)
View(aqw)
election <- read.csv("~/Desktop/us-election-2016-results-by-county.csv")
# clean election data!
el_results <- dcast(election, election$CountyName + election$CountyFips +election$StateName ~ election$Candidate)
el_results$state_county <- do.call(paste, c(el_results[c( "election$StateName","election$CountyName")], sep = ","))
head(el_results)
head(county)
head(counties)
counties <- readRDS("data/counties.rds")
getwd()
setwd("/Users/wnowak/opportunity")
counties <- readRDS("data/counties.rds")
setwd("/Users/wnowak/opportunity/shiny_test")
counties <- readRDS("data/counties.rds")
head(counties)
head(el_results)
el_results$`election$CountyName`
el_results$`election$CountyName` = tolower(el_results$`election$CountyName`)
el_results$state_county <- do.call(paste, c(el_results[c( "election$StateName","election$CountyName")], sep = ","))
head(el_results)
head(counties)
el_results$state_county = str_replace_all(el_results$state_county,"-"," ")
library(stringr)
el_results$state_county = str_replace_all(el_results$state_county,"-"," ")
head(el_results)
class(counties)
class(el_results)
total <- merge(counties,el_results,by=c("name",state_county"))
)
)
\
""
total <- merge(counties,el_results,by=c("name","state_county"))
total <- merge(counties,el_results,by='name')
election <- read.csv("~/Desktop/us-election-2016-results-by-county.csv")
# clean election data!
# dcast to switch to wide format
el_results <- dcast(election, election$CountyName + election$CountyFips +election$StateName ~ election$Candidate)
#tolower county names
el_results$`election$CountyName` = tolower(el_results$`election$CountyName`)
# paste state and counties together
el_results$name <- do.call(paste, c(el_results[c( "election$StateName","election$CountyName")], sep = ","))
#add space where hyphens are using stringr package
library(stringr)
el_results$name = str_replace_all(el_results$name,"-"," ")
# compare two dataframes
head(el_results)
head(counties)
# merge on counties.
total <- merge(counties,el_results,by='name')
head(total)
getwd()
election <- read.csv("data/election_2016_country.csv")
election <- read.csv("/data/election_2016_country.csv")
election <- read.csv("data/election_2016_country.csv")
election <- read.csv("data/election_2016_country.csv")
getwd()
election <- read.csv("data/election_2016_county.csv")
getwd()
election <- read.csv("data/election_2016_county.csv")
# clean election data!
# dcast to switch to wide format
el_results <- dcast(election, election$CountyName + election$CountyFips +election$StateName ~ election$Candidate)
#tolower county names
el_results$`election$CountyName` = tolower(el_results$`election$CountyName`)
# paste state and counties together
el_results$state_county <- do.call(paste, c(el_results[c( "election$StateName","election$CountyName")], sep = ","))
#add space where hyphens are using stringr package
library(stringr)
el_results$state_county = str_replace_all(el_results$state_county,"-"," ")
# compare two dataframes
head(el_results)
head(counties)
# merge on counties.
total <- merge(counties,el_results,by='name')
head(total)
save(total,file="counties.Rds")
getwd()
election <- read.csv("data/election_2016_county.csv")
# clean election data!
# dcast to switch to wide format
el_results <- dcast(election, election$CountyName + election$CountyFips +election$StateName ~ election$Candidate)
#tolower county names
el_results$`election$CountyName` = tolower(el_results$`election$CountyName`)
# paste state and counties together
el_results$state_county <- do.call(paste, c(el_results[c( "election$StateName","election$CountyName")], sep = ","))
#add space where hyphens are using stringr package
library(stringr)
el_results$state_county = str_replace_all(el_results$state_county,"-"," ")
# compare two dataframes
head(el_results)
head(counties)
# merge on counties.
total <- merge(demo_data,el_results,by='name')
head(total)
save(total,file="data/counties.Rds")
counties <- readRDS("data/counties.rds")
head(counties)
save(total,file="data/counties.rds")
save(total,file="data/counties.rds")
counties <- readRDS("data/counties.rds")
counties <- load("data/counties.rds")
head(counties)
getwd()
election <- read.csv("data/election_2016_county.csv")
# clean election data!
# dcast to switch to wide format
el_results <- dcast(election, election$CountyName + election$CountyFips +election$StateName ~ election$Candidate)
#tolower county names
el_results$`election$CountyName` = tolower(el_results$`election$CountyName`)
# paste state and counties together
el_results$state_county <- do.call(paste, c(el_results[c( "election$StateName","election$CountyName")], sep = ","))
#add space where hyphens are using stringr package
library(stringr)
el_results$state_county = str_replace_all(el_results$state_county,"-"," ")
# compare two dataframes
head(el_results)
head(counties)
# merge on counties.
total <- merge(demo_data,el_results,by='name')
head(total)
save(total,file="data/counties.rds")
counties <- load("data/counties.rds")
head(counties)
head(total)
getwd()
election <- read.csv("data/election_2016_county.csv")
# clean election data!
# dcast to switch to wide format
el_results <- dcast(election, election$CountyName + election$CountyFips +election$StateName ~ election$Candidate)
#tolower county names
el_results$`election$CountyName` = tolower(el_results$`election$CountyName`)
# paste state and counties together
el_results$state_county <- do.call(paste, c(el_results[c( "election$StateName","election$CountyName")], sep = ","))
#add space where hyphens are using stringr package
library(stringr)
el_results$state_county = str_replace_all(el_results$state_county,"-"," ")
# compare two dataframes
head(el_results)
head(counties)
# merge on counties.
total <- merge(demo_data,el_results,by='name')
head(total)
saveRDS(total,file="data/counties.rds")
getwd()
election <- read.csv("data/election_2016_county.csv")
# clean election data!
# dcast to switch to wide format
el_results <- dcast(election, election$CountyName + election$CountyFips +election$StateName ~ election$Candidate)
#tolower county names
el_results$`election$CountyName` = tolower(el_results$`election$CountyName`)
# paste state and counties together
el_results$state_county <- do.call(paste, c(el_results[c( "election$StateName","election$CountyName")], sep = ","))
#add space where hyphens are using stringr package
library(stringr)
el_results$state_county = str_replace_all(el_results$state_county,"-"," ")
# compare two dataframes
head(el_results)
head(counties)
# merge on counties.
total <- merge(demo_data,el_results,by='name')
head(total)
saveRDS(total,file="data/counties.rds")
counties <- readRDS("data/counties.rds")
head(counties)
el_results$perc_Trump = el_results$Trump / sum(c(el_results$Trump,el_results$Clinton,el_results$Johnson,el_results$Stein,el_results$Castle))
class(el_results$Trump)
el_results$Trump = as.numeric(el_results$Trump)
el_results$Clinton = as.numeric(el_results$Clinton)
el_results$Johnson = as.numeric(el_results$Johnson)
el_results$Stein = as.numeric(el_results$Stein)
el_results$Castle = as.numeric(el_results$Castle)
el_results$perc_Trump = el_results$Trump / sum(c(el_results$Trump,el_results$Clinton,el_results$Johnson,el_results$Stein,el_results$Castle))
head(el_results)
sum(c(el_results$Trump,el_results$Clinton,el_results$Johnson,el_results$Stein,el_results$Castle))
el_results$Trump
el_results$Trump[1]
sum(c(el_results$Trump[1],el_results$Clinton[1],el_results$Johnson[1],el_results$Stein[1],el_results$Castle[1]))
el_results$perc_Trump = el_results$Trump / sum(c(el_results$Trump,el_results$Clinton,el_results$Johnson,el_results$Stein,el_results$Castle))
head(el_results)
el_results$Trump[1] / sum(c(el_results$Trump[1],el_results$Clinton[1],el_results$Johnson[1],el_results$Stein[1],el_results$Castle[1]))
el_results$perc_Trump = el_results$Trump / sum(c(el_results$Trump,el_results$Clinton,el_results$Johnson,el_results$Stein,el_results$Castle),na.rm=T)
head(el_results)
el_results$perc_Trump = el_results$Trump / (sum(c(el_results$Trump,el_results$Clinton,el_results$Johnson,el_results$Stein,el_results$Castle),na.rm=T))
head(el_results)
el_results$Trump[1]
el_results$Clinton[1]
el_results$Trump[1] / sum(c(el_results$Trump[1],el_results$Clinton[1],el_results$Johnson[1],el_results$Stein[1],el_results$Castle[1]))
el_results$total_votes = (sum(c(el_results$Trump,el_results$Clinton,el_results$Johnson,el_results$Stein,el_results$Castle),na.rm=T))
head(el_results)
el_results$total_votes = (sum(el_results$Trump,el_results$Clinton,el_results$Johnson,el_results$Stein,el_results$Castle,na.rm=T))
head(el_results)
el_results$total_votes = rowsum(el_results,4:8)
4:8
el_results$total_votes = rowSums( el_results[,4:8] )
head(el_results)
el_results$perc_Trump = el_results$Trump / el_results$total_votes
head(el_results)
el_results$total_votes = rowSums( el_results[,4:8],na.rm=T )
head(el_results)
el_results$perc_Trump = el_results$Trump / el_results$total_votes
getwd()
election <- read.csv("data/election_2016_county.csv")
# clean election data!
# dcast to switch to wide format
el_results <- dcast(election, election$CountyName + election$CountyFips +election$StateName ~ election$Candidate)
#tolower county names
el_results$`election$CountyName` = tolower(el_results$`election$CountyName`)
# paste state and counties together
el_results$state_county <- do.call(paste, c(el_results[c( "election$StateName","election$CountyName")], sep = ","))
#add space where hyphens are using stringr package
library(stringr)
el_results$state_county = str_replace_all(el_results$state_county,"-"," ")
# compare two dataframes
head(el_results)
head(counties)
#change trump and clinton votes to percents
# convert to numeric
el_results$Trump = as.numeric(el_results$Trump)
el_results$Clinton = as.numeric(el_results$Clinton)
el_results$Johnson = as.numeric(el_results$Johnson)
el_results$Stein = as.numeric(el_results$Stein)
el_results$Castle = as.numeric(el_results$Castle)
el_results$total_votes = rowSums( el_results[,4:8],na.rm=T )
el_results$perc_Trump = el_results$Trump / el_results$total_votes
# merge on counties.
total <- merge(demo_data,el_results,by='name')
head(total)
saveRDS(total,file="data/counties.rds")
head(el_results)
getwd()
election <- read.csv("data/election_2016_county.csv")
# clean election data!
# dcast to switch to wide format
el_results <- dcast(election, election$CountyName + election$CountyFips +election$StateName ~ election$Candidate)
#tolower county names
el_results$`election$CountyName` = tolower(el_results$`election$CountyName`)
# paste state and counties together
el_results$state_county <- do.call(paste, c(el_results[c( "election$StateName","election$CountyName")], sep = ","))
#add space where hyphens are using stringr package
library(stringr)
el_results$state_county = str_replace_all(el_results$state_county,"-"," ")
# compare two dataframes
head(el_results)
head(counties)
demo_data=read.rds("data/demo_data.rds")
demo_data=readRDS("data/demo_data.rds")
head(demo_data)
election <- read.csv("data/election_2016_county.csv")
head(election)
# clean election data!
# dcast to switch to wide format
el_results <- dcast(election, election$CountyName + election$CountyFips +election$StateName ~ election$Candidate)
#tolower county names
el_results$`election$CountyName` = tolower(el_results$`election$CountyName`)
# paste state and counties together
el_results$state_county <- do.call(paste, c(el_results[c( "election$StateName","election$CountyName")], sep = ","))
#add space where hyphens are using stringr package
library(stringr)
el_results$state_county = str_replace_all(el_results$state_county,"-"," ")
head(el_results)
head(demo_data)
# change to name col name for merge
el_results$name = str_replace_all(el_results$state_county,"-"," ")
# compare two dataframes
head(el_results)
head(demo_data)
el_results$Trump = as.numeric(el_results$Trump)
el_results$Clinton = as.numeric(el_results$Clinton)
el_results$Johnson = as.numeric(el_results$Johnson)
el_results$Stein = as.numeric(el_results$Stein)
el_results$Castle = as.numeric(el_results$Castle)
el_results$total_votes = rowSums( el_results[,4:8],na.rm=T )
el_results$perc_Trump = el_results$Trump / el_results$total_votes
head(el_results)
total <- merge(demo_data,el_results,by='name')
head(total)
getwd()
demo_data=readRDS("data/demo_data.rds")
head(demo_data)
election <- read.csv("data/election_2016_county.csv")
head(election)
# clean election data!
# dcast to switch to wide format
el_results <- dcast(election, election$CountyName + election$CountyFips +election$StateName ~ election$Candidate)
#tolower county names
el_results$`election$CountyName` = tolower(el_results$`election$CountyName`)
# paste state and counties together
el_results$state_county <- do.call(paste, c(el_results[c( "election$StateName","election$CountyName")], sep = ","))
#add space where hyphens are using stringr package
library(stringr)
# change to name col name for merge
el_results$name = str_replace_all(el_results$state_county,"-"," ")
# compare two dataframes
head(el_results)
head(demo_data)
#change trump and clinton votes to percents
# convert to numeric
el_results$Trump = as.numeric(el_results$Trump)
el_results$Clinton = as.numeric(el_results$Clinton)
el_results$Johnson = as.numeric(el_results$Johnson)
el_results$Stein = as.numeric(el_results$Stein)
el_results$Castle = as.numeric(el_results$Castle)
el_results$total_votes = rowSums( el_results[,4:8],na.rm=T )
el_results$perc_Trump = el_results$Trump / el_results$total_votes
el_results$perc_Clinton = el_results$Clinton / el_results$total_votes
head(el_results)
# merge on counties.
total <- merge(demo_data,el_results,by='name')
head(total)
saveRDS(total,file="data/counties.rds")
getwd()
demo_data=readRDS("data/demo_data.rds")
head(demo_data)
election <- read.csv("data/election_2016_county.csv")
head(election)
# clean election data!
# dcast to switch to wide format
el_results <- dcast(election, election$CountyName + election$CountyFips +election$StateName ~ election$Candidate)
#tolower county names
el_results$`election$CountyName` = tolower(el_results$`election$CountyName`)
# paste state and counties together
el_results$state_county <- do.call(paste, c(el_results[c( "election$StateName","election$CountyName")], sep = ","))
#add space where hyphens are using stringr package
library(stringr)
# change to name col name for merge
el_results$name = str_replace_all(el_results$state_county,"-"," ")
# compare two dataframes
head(el_results)
head(demo_data)
#change trump and clinton votes to percents
# convert to numeric
el_results$Trump = as.numeric(el_results$Trump)
el_results$Clinton = as.numeric(el_results$Clinton)
el_results$Johnson = as.numeric(el_results$Johnson)
el_results$Stein = as.numeric(el_results$Stein)
el_results$Castle = as.numeric(el_results$Castle)
el_results$total_votes = rowSums( el_results[,4:8],na.rm=T )
el_results$perc_Trump = el_results$Trump / el_results$total_votes
el_results$perc_Clinton = el_results$Clinton / el_results$total_votes
head(el_results)
# merge on counties.
total <- merge(demo_data,el_results,by='name')
head(total)
saveRDS(total,file="data/counties.rds")
runApp()
runApp()
head(total)
getwd()
demo_data=readRDS("data/demo_data.rds")
head(demo_data)
election <- read.csv("data/election_2016_county.csv")
head(election)
# clean election data!
# dcast to switch to wide format
el_results <- dcast(election, election$CountyName + election$CountyFips +election$StateName ~ election$Candidate)
#tolower county names
el_results$`election$CountyName` = tolower(el_results$`election$CountyName`)
# paste state and counties together
el_results$state_county <- do.call(paste, c(el_results[c( "election$StateName","election$CountyName")], sep = ","))
#add space where hyphens are using stringr package
library(stringr)
# change to name col name for merge
el_results$name = str_replace_all(el_results$state_county,"-"," ")
# compare two dataframes
head(el_results)
head(demo_data)
#change trump and clinton votes to percents
# convert to numeric
el_results$Trump = as.numeric(el_results$Trump)
el_results$Clinton = as.numeric(el_results$Clinton)
el_results$Johnson = as.numeric(el_results$Johnson)
el_results$Stein = as.numeric(el_results$Stein)
el_results$Castle = as.numeric(el_results$Castle)
el_results$total_votes = rowSums( el_results[,4:8],na.rm=T )
el_results$perc_Trump = 100*el_results$Trump / el_results$total_votes
el_results$perc_Clinton = 100*el_results$Clinton / el_results$total_votes
head(el_results)
# merge on counties.
total <- merge(demo_data,el_results,by='name')
head(total)
saveRDS(total,file="data/counties.rds")
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
